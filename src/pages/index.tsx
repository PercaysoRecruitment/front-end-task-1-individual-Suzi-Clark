import Head from 'next/head';
import React, {
  useState,
  useEffect,
  MouseEvent,
} from 'react';

import GameBoard from '../components/GameBoard';
import { gridArray } from '../types';
import EndGame from '../components/EndGame';
import useWinCheck from '../hooks/useWinCheck';

export default function Home() {
  const [win, winCheck] = useWinCheck();
  const [noughtsNext, setNoughtsNext] = useState<boolean>(true);
  const [grid, setGrid] = useState<gridArray>([' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']);

  // gameBoard buttons are disabled after a click so players can't overwrite each other's goes.
  function handleGameClick(e: MouseEvent<HTMLButtonElement>) {
    const target = e.target as HTMLButtonElement;
    if (target) {
      target.disabled = true;
      const gridIndex = +(target.id);
      if (noughtsNext) {
        const newGrid: gridArray = [...grid.slice(0, gridIndex), '0', ...grid.slice(gridIndex + 1)];
        setGrid(newGrid);
      } else {
        const newGrid: gridArray = [...grid.slice(0, gridIndex), 'X', ...grid.slice(gridIndex + 1)];
        setGrid(newGrid);
      }
      setNoughtsNext(!noughtsNext);
    }
  }

  /* created function to reset states if player wants to play again instead of page refresh
  this makes it ppossible to code score tracking over multiple games in future */
  function handlePlayAgain() {
    setNoughtsNext(true);
    setGrid([' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']);
  }

  useEffect(() => {
    winCheck(grid);
  }, [grid]);

  return (
    <>
      <Head>
        <title>Noughts & Crosses</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1>Noughts & Crosses</h1>
        {(win === 'Progress')
          // eslint-disable-next-line react/jsx-no-bind
          ? (<GameBoard handleGameClick={handleGameClick} grid={grid} />)
          // eslint-disable-next-line react/jsx-no-bind
          : (<EndGame winner={win} handlePlayAgain={handlePlayAgain} />)}
      </main>
    </>
  );
}
